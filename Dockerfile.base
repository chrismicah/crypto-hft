# Multi-stage Dockerfile for HFT microservices
# Stage 1: Build stage with all dependencies
FROM python:3.11-slim as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Stage 2: Runtime stage with minimal footprint
FROM python:3.11-slim as runtime

# Create non-root user for security
RUN groupadd -r hftuser && useradd -r -g hftuser hftuser

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY common/ ./common/
COPY services/ ./services/

# Change ownership to non-root user
RUN chown -R hftuser:hftuser /app

# Switch to non-root user
USER hftuser

# Health check (to be overridden in service-specific Dockerfiles)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command (to be overridden)
CMD ["python", "-m", "services.base.main"]
